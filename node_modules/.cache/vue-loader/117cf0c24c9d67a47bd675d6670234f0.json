{"remainingRequest":"C:\\Users\\Pánfila\\Documents\\Vue\\CellphoneStore-main\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!C:\\Users\\Pánfila\\Documents\\Vue\\CellphoneStore-main\\node_modules\\cache-loader\\dist\\cjs.js??ref--1-0!C:\\Users\\Pánfila\\Documents\\Vue\\CellphoneStore-main\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Pánfila\\Documents\\Vue\\CellphoneStore-main\\src\\views\\Cart.vue?vue&type=template&id=c028c34c&scoped=true&","dependencies":[{"path":"C:\\Users\\Pánfila\\Documents\\Vue\\CellphoneStore-main\\src\\views\\Cart.vue","mtime":1637961253646},{"path":"C:\\Users\\Pánfila\\Documents\\Vue\\CellphoneStore-main\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Pánfila\\Documents\\Vue\\CellphoneStore-main\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":499162500000},{"path":"C:\\Users\\Pánfila\\Documents\\Vue\\CellphoneStore-main\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Pánfila\\Documents\\Vue\\CellphoneStore-main\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}